<?phpnamespace WorldLogger;use pocketmine\Player;use pocketmine\Server;use pocketmine\command\Command;use pocketmine\command\CommandSender;class Main extends \pocketmine\plugin\PluginBase{	const PREFIX = "[WorldLogger] ";	const MAIN_COMMAND = "check";	private $chaxun = [];	private $mode = [];		public function onEnable()	{		$this->getServer()->getLogger()->info(self::PREFIX."-----------------------------");		$this->getServer()->getLogger()->info(self::PREFIX."§e地图日志记录插件 §a已加载");		$this->getServer()->getLogger()->info(self::PREFIX."优化者: §bTeaclon§f(§e锤子§f)");		$this->getServer()->getLogger()->info(self::PREFIX."§e本插件基于插件 §6ZhyProtect §e进行优化");		$this->getServer()->getLogger()->info(self::PREFIX."§c禁止倒卖, 倒卖者死全家");		$this->getServer()->getLogger()->info(self::PREFIX."-----------------------------");		if(!is_dir($this->getDataFolder())) mkdir($this->getDataFolder());				$this->sql = $s = new SQLiteDatabase($this->getDataFolder() . "world.sql", $this);		$this->getServer()->getPluginManager()->registerEvents(new event($this, $s), $this);	}			public function onCommand(CommandSender $sender, Command $cmd, string $label, array $arg) : bool	{		if(!$sender instanceof Player)		{			$sender->sendMessage(self::PREFIX."§c请在游戏内使用这个指令.");			return true;		}				if($cmd->getName() == self::MAIN_COMMAND)		{			if(!isset($arg[0]))			{				$sender->sendMessage(self::PREFIX."用法: §d/§6".self::MAIN_COMMAND." i §f进入或退出普通查询模式");				$sender->sendMessage(self::PREFIX."用法: §d/§6".self::MAIN_COMMAND." o §f进入或退出高级查询模式");				$sender->sendMessage(self::PREFIX."用法: §d/§6".self::MAIN_COMMAND." page §f<§e页码§f>   使用翻页功能");				return false;			}						switch($arg[0])			{				default:					$sender->sendMessage(self::PREFIX."用法: §d/§6".self::MAIN_COMMAND." i §f进入或退出普通查询模式");					$sender->sendMessage(self::PREFIX."用法: §d/§6".self::MAIN_COMMAND." o §f进入或退出高级查询模式");					$sender->sendMessage(self::PREFIX."用法: §d/§6".self::MAIN_COMMAND." r §f半径查找内容");					$sender->sendMessage(self::PREFIX."用法: §d/§6".self::MAIN_COMMAND." page §f<§e页码§f> 使用翻页功能");					return false;				break;												case "i":					$this->setIn($sender, !$this->getIn($sender));										// if($this->getIn($sender)) $this->mode[$sender->getName()] = "普通模式";					// elseif(isset($this->mode[$sender->getName()])) unset($this->mode[$sender->getName()]);										$sender->sendMessage(self::PREFIX."§e已".($this->getIn($sender) ? "§a进入" : "§c退出")."§e查询模式");					return true;				break;												case "o":					if(!isset($arg[1]) || intval($arg[1]) <= 0)					{						$sender->sendMessage(self::PREFIX."§c查询页码错误!");						return true;					}					$sender->sendMessage(self::PREFIX.$this->sql->高级查询(0, "", $arg[1], $sender));					return true;				break;												case "r":					if(isset($arg[1]) && isset($arg[2]))					{						if($arg[1] < 1)						{							$sender->sendMessage(self::PREFIX."§c半径填写错误!");							return false;						}						$sender->sendMessage(self::PREFIX.$this->sql->高级查询($arg[1], $arg[2], 1, $sender));						return true;					}					return false;				break;												case "page":					if(!isset($arg[1]) || intval($arg[1]) <= 0)					{						$sender->sendMessage(self::PREFIX."§c查询页码错误!");						return true;					}					$sender->sendMessage(self::PREFIX.$this->sql->查询(null, $arg[1], $sender));					return true;				break;			}		}	}			public function getIn(Player $player)	{		return isset($this->chaxun[$player->getName()]) ? $this->chaxun[$player->getName()] : false;	}			public function setIn(Player $player, $b = false)	{		$this->chaxun[$player->getName()] = $b;	}		}?>